{
	"info": {
		"_postman_id": "7cc9baa4-ee61-472d-a584-b51f54d39c61",
		"name": "udacity Capstone",
		"description": "Tests for Udasity FSND capstone project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09a35949-9932-454c-8117-7a7aba8eb4a3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "083b85bf-4ca4-445b-8ce9-b6d2a4cb0508",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f6c68da-61c3-4339-aa62-7fb8c2799ea1",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wally Walter\",\r\n    \"age\": 75,\r\n    \"gender\": \"Male\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6c0eb48-2be6-4257-a4eb-aeac44398ac0",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wally Walter\",\r\n    \"releaseDate\": \"Thu, 20 Jan 2011 00:00:00 GMT\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6bd681d-56a1-46a0-84a6-da6c04b65d87",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ted Tedders\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85210cba-6f17-467a-84b8-b89c4a4cad40",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Fight People 5\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c6b5a66-70b9-43fc-b2ab-470fb0456a57",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "827de8e2-c0a3-4bae-a132-105cb12c1537",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"description": "Use to check ability of casting assistant.  Should only be able to get movies and actors",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5abkRKUkhQUmhMZnY0US13Y3VyMyJ9.eyJpc3MiOiJodHRwczovL3Jvb2Z1c2VhdC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYwNjE5YjE2NTJlNWEwMDE5Y2U1MGY3IiwiYXVkIjoiY2Fwc3RvbmUiLCJpYXQiOjE1OTQ0ODc0MzUsImV4cCI6MTU5NDU3MzgzNSwiYXpwIjoiaUJaRXFUUHRUUklzbkN3bDNZbFFTek1aYjl6d1owMWoiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIl19.bNZQ4cZqqeXLFvH-myuvqiDTnEpF0yiEejxqPcskLpKG9EtZxt46UGkkGbbqZVFqL9bLonUSOEzgnLv9KKSSUB0nr3MbpNnqpOm5mAqlzfHdRenqupJQucqhYBz4oZK_L9yFnux3UmA4Y1SVdbJoU8A7qZcWAqkpIq976PYgNlKuqaKdcR9aQh0u-bIoTrqJ3VWt9JDLIebdipXZe_iITta8eEV01gsYgo8hJKLvy5hukuDHj1AR3HK1K_8y_Dbo8uYf_uoH8ILykv-APEKvVvIYRfKUr4StGcSdN3f75rcd1IgbGN4k30kTS8MKUTMiuu4wMZ9bJMRmYY-keXbJkg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0b6699e9-7eb5-47c6-a573-3643cd1528b2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e4d48733-4402-435d-843b-c594b137ccf6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db877787-fe76-4f4c-9b42-0f3287d48a38",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b82fe809-92ab-4ace-a1e2-f3e12dd7539c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d0f5823-0d7a-4c1f-be20-3f24f8f5e89e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wally Walter\",\r\n    \"age\": 75,\r\n    \"gender\": \"Male\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "153884bc-bd09-4aaa-9f2a-f4a0148ca78f",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wally Walter\",\r\n    \"releaseDate\": \"Thu, 20 Jan 2011 00:00:00 GMT\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a48a2979-34a1-4fd3-a04a-c11e067227c9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ted Tedders\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "750b6192-bebb-4adb-bcf3-54fbd22c79b9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Fight People 5\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bfb8a51-de53-48ad-b046-c160eaa3d61c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72cc56f8-967f-4c6d-96f0-85dad6fb06cb",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"description": "Use to check ability of casting director.  Should be able to get actors and movies, delete and post actors, and patch movies and actors.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5abkRKUkhQUmhMZnY0US13Y3VyMyJ9.eyJpc3MiOiJodHRwczovL3Jvb2Z1c2VhdC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYwNjE5ZDc2NTJlNWEwMDE5Y2U1MGZhIiwiYXVkIjoiY2Fwc3RvbmUiLCJpYXQiOjE1OTQ0ODc0MDYsImV4cCI6MTU5NDU3MzgwNiwiYXpwIjoiaUJaRXFUUHRUUklzbkN3bDNZbFFTek1aYjl6d1owMWoiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIl19.LGK-89FD_Mtk8Yaoaq63RhOGun6YeuDRhqozaSYPvxps7oehPMTAee2piw69pKd7hrdxyDlFbeZDD287x4sHQjH7NZdW3JFybckZYD7i3dJRBByqFlWMm-x8aegUymicWcCdn3-KF11ZCOuw9p2BUKG9P1V9kvsYSgRdGyAsgGbG4w8DA3bt9jFtpMz4vvNHPavdgXupKE0O36W1ONUh5GfH1Lo1Jn85WTNzN_gKa9FtNZ3TiZ0do6qBEEX5dewSQoXL0n_fQMj5x3pzYeRIxsAHJhUxIUmuUzqD6OXEsvnJiQjL95jeAv3qwhgqLXfBBNMw7q6ZmMQTP8ADvXFrLA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb8c7c5f-a4c7-4e84-8a9c-bf1826a7e9e3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "14beb4d3-4e67-4f26-b0e8-846949069169",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "346b3a46-0d79-4a5c-8c6d-94f1ef34e6b0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21f06447-7655-43dd-a63f-fe69ac3b7f04",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f208e246-c308-42ee-ad3c-dc88ee267132",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wally Walter\",\r\n    \"releaseDate\": \"Thu, 20 Jan 2011 00:00:00 GMT\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e201ec46-9452-44db-be1a-dc178f822599",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wally Walter\",\r\n    \"age\": 75,\r\n    \"gender\": \"Male\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d746fc0-7e0d-4d3c-b8b3-e756afe98342",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ted Tedders\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86e8d0b8-a315-4768-b119-47a92d6e75bc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Fight People 5\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcb52514-1988-49dd-9631-4b25fcc557c3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1bd3d06-9121-48c8-b954-c1c2e25bd185",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"4"
							]
						}
					},
					"response": []
				}
			],
			"description": "Use to check ability of the executive producer.  Should be able to get, patch, post, and delete actors and movies.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5abkRKUkhQUmhMZnY0US13Y3VyMyJ9.eyJpc3MiOiJodHRwczovL3Jvb2Z1c2VhdC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYwNjE5ZjUyZWIzMDMwMDE5Yzg0OWRkIiwiYXVkIjoiY2Fwc3RvbmUiLCJpYXQiOjE1OTQ0ODczNjAsImV4cCI6MTU5NDU3Mzc2MCwiYXpwIjoiaUJaRXFUUHRUUklzbkN3bDNZbFFTek1aYjl6d1owMWoiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6bW92aWVzIiwiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6bW92aWVzIl19.f_hqP7qNtD_JRCmIysufATLGrtDL6srA2W_R-Ze0mbRErqm2wPB38GsgXd_Efxey1abQZ0-tvGheQ5imJm5kwHyQ-26J8PybZTnyiYmVsiXODmaj3sb8lFssAp6J_ixI2zrq-oTdMoXLPna_yhqevFXK6sB1LvvUBdDEeWji3_JFke-OWBIymXNASBRFFA3S98gaQkEsG4DfgmdZOx5PJJiJl8S-JYws85i8Lt2BwNYozIIwkrWSVf3IqAiY1H6HZu6rZT_eNUTlqH3NWpIMP-TQ71fsqm3acIfEMynJtQNE_eOq386pCIMOI6P6VkPIgguKIllH9mBOasEG1FsqDw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a3aac090-aabb-4ae3-b15b-92c0b237a971",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "67bb4500-0b21-4771-9346-42300627fb53",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3067893d-b032-460e-9db9-2efdeb633f0d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "81cf601d-f079-45e0-beaa-4384b5ac5f2b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "30971cc8-21ec-4ff7-98ba-c8246281cc9a",
			"key": "host",
			"value": "localhost:5000"
		}
	],
	"protocolProfileBehavior": {}
}